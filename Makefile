CFLAGS=-std=c11 -g -static
SRCS=$(wildcard *.c)
OBJS=$(SRCS:.c=.o)

$(OBJS): ccc.h

help:
	@echo "Usage: make [lint|test|debug|clean|process]"
	@echo "  lint: run c and shell checker"
	@echo "  test: run tests"
	@echo "  debug: run tests in debug mode"
	@echo "  clean: remove object files"
	@echo "  process: run the preprocessor on all source files for each stage"

ccc: $(OBJS)
	$(CC) -o $@ $(OBJS) $(CFLAGS)

lint:
	clang-format -i ./*.c
	clang-format -i ./*.h

test: ccc
	./ccc test/test.c > tmp.s
	cat test/helper.c | gcc -xc -c -o tmp2.o -
	gcc -static -o tmp tmp.s tmp2.o
	./tmp

clean:
	rm -f ccc *.o *~ tmp* stage*/*

.PHONY: help lint test clean process

# stage0: gcc
# stage1: ccc on host machine generated by stage0 (gcc)
# stage2: ccc on X86-64 machine generated by stage1
# stage3: ccc on X86-64 machine generated by stage2

ccc-stage1: $(OBJS)
	@rm -rf stage1
	@mkdir stage1
	$(CC) -o stage1/$@ $(OBJS) $(CFLAGS)

ccc-stage2: ccc-stage1 $(SRCS)
	@rm -rf stage2
	@mkdir stage2
	$(CC) -D__ccc_self__ -E -P codegen.c -o stage2/codegen.c
	$(CC) -D__ccc_self__ -E -P main.c -o stage2/main.c
	$(CC) -D__ccc_self__ -E -P parse.c -o stage2/parse.c
	$(CC) -D__ccc_self__ -E -P tokenize.c -o stage2/tokenize.c
	$(CC) -D__ccc_self__ -E -P type.c -o stage2/type.c
	stage1/ccc-stage1 stage2/codegen.c > stage2/codegen.s
	stage1/ccc-stage1 stage2/main.c > stage2/main.s
	stage1/ccc-stage1 stage2/parse.c > stage2/parse.s
	stage1/ccc-stage1 stage2/tokenize.c > stage2/tokenize.s
	stage1/ccc-stage1 stage2/type.c > stage2/type.s
	$(CC) -o stage2/$@

ccc-stage3: ccc-stage2 $(SRCS)
	@rm -rf stage3
	@mkdir stage3
	$(CC) -D__ccc_self__ -E -P type.c -o stage3/type.c
	$(CC) -D__ccc_self__ -E -P codegen.c -o stage3/codegen.c
	$(CC) -D__ccc_self__ -E -P main.c -o stage3/main.c
	$(CC) -D__ccc_self__ -E -P parse.c -o stage3/parse.c
	$(CC) -D__ccc_self__ -E -P tokenize.c -o stage3/tokenize.c
	stage2/ccc-stage2 stage3/codegen.c > stage3/codegen.s
	stage2/ccc-stage2 stage3/main.c > stage3/main.s
	stage2/ccc-stage2 stage3/parse.c > stage3/parse.s
	stage2/ccc-stage2 stage3/tokenize.c > stage3/tokenize.s
	stage2/ccc-stage2 stage3/type.c > stage3/type.s
	$(CC) -o stage3/$@

test-self-host: ccc-stage1 ccc-stage2 ccc-stage3
	strip stage2/ccc-stage2
	strip stage3/ccc-stage3
	diff -s stage2/ccc-stage2 stage3/ccc-stage3